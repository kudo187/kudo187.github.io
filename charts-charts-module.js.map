{"version":3,"sources":["webpack:///./src/app/charts/charts.component.html","webpack:///./src/app/charts/charts.component.ts","webpack:///./src/app/charts/charts.module.ts"],"names":[],"mappings":"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","file":"charts-charts-module.js","sourcesContent":["module.exports = \"<h2 class=\\\"heading text-center\\\">Charts</h2>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-xl-6\\\">\\r\\n    <h4 class=\\\"mt-4\\\">Bar Chart</h4>\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-body\\\">\\r\\n        <canvas id=\\\"bar-chart\\\" ></canvas>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"col-xl-6\\\">\\r\\n    <h4 class=\\\"mt-4\\\">Line Chart</h4>\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-body\\\">\\r\\n        <canvas id=\\\"line-chart\\\" ></canvas>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-xl-6\\\">\\r\\n    <h4 class=\\\"mt-4\\\">Doughnut Chart</h4>\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-body\\\">\\r\\n        <canvas id=\\\"doughnut-chart\\\"></canvas>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"col-xl-6\\\">\\r\\n    <h4 class=\\\"mt-4\\\">Mix Chart (Bar and Line)</h4>\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-body\\\">\\r\\n        <canvas id=\\\"mixed-chart\\\"></canvas>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-xl-6\\\">\\r\\n    <h4 class=\\\"mt-4\\\">Bubble Chart</h4>\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-body\\\">\\r\\n        <canvas id=\\\"bubble-chart\\\"></canvas>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"col-xl-6\\\">\\r\\n    <h4 class=\\\"mt-4\\\">Radar Chart</h4>\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-body\\\">\\r\\n        <canvas id=\\\"radar-chart\\\"></canvas>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<h4 class=\\\"mt-4\\\">Example</h4>\\r\\n<div class=\\\"card\\\">\\r\\n  <div class=\\\"card-body\\\">\\r\\n    <div class=\\\"form-group row mb-4\\\">\\r\\n      <div class=\\\"col-sm-2\\\">\\r\\n        <label for=\\\"\\\">Select Type</label>\\r\\n      </div>\\r\\n      <div class=\\\"col-sm-4\\\">\\r\\n        <ng-select [items]=\\\"['line','horizontalBar','bar','radar','polarArea','doughnut','pie']\\\" (change)=\\\"updateChartType()\\\" placeholder=\\\"Select\\\"\\r\\n          [(ngModel)]=\\\"exampleChartType\\\"></ng-select>\\r\\n      </div>\\r\\n      <div class=\\\"col-sm-4 mt-3 mt-sm-0\\\">\\r\\n        <button class=\\\"btn btn-secondary \\\" (click)=\\\"randomizeData()\\\">Randomize !</button>\\r\\n      </div>\\r\\n    </div>\\r\\n    <hr>\\r\\n    <div class=\\\"exampleChart\\\">\\r\\n      <canvas id=\\\"exampleChart\\\"></canvas>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<p class=\\\"mt-4 d-block text-muted\\\">for more info:\\r\\n  <a href=\\\"https://www.chartjs.org/\\\">Chartjs\\r\\n    <i class=\\\"material-icons\\\" style=\\\"font-size: .9rem\\\">launch</i>\\r\\n  </a>\\r\\n</p>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport * as Chart from 'chart.js'\r\n\r\n@Component({\r\n  selector: 'app-charts',\r\n  styles: ['.card-body,.exampleChart{  position: relative;   min-height:45vh; }'],\r\n  templateUrl: './charts.component.html'\r\n})\r\nexport class ChartsComponent implements OnInit {\r\n\r\n  exampleChartType = 'line';\r\n  exampleChart;\r\n  exampleDataSet1;\r\n  exampleDataSet2;\r\n  exampleData;\r\n  exampleChartCanvas;\r\n\r\n  ngOnInit() {\r\n    // Bar chart\r\n    this.barChart();\r\n    // Line Chart\r\n    this.lineChart();\r\n    // Doughnut Chart\r\n    this.doughnutChart();\r\n    // Mixed Chart\r\n    this.mixedChart();\r\n    // Bubble Chart\r\n    this.bubbleChart();\r\n    // Radar Chart\r\n    this.radarChart();\r\n    // example\r\n    this.setExample();\r\n    // randomize chart data\r\n    this.randomizeData();\r\n  }\r\n\r\n  private radarChart() {\r\n    const radar = new Chart(document.getElementById('radar-chart'), {\r\n      type: 'radar',\r\n      data: {\r\n        labels: ['Africa', 'Asia', 'Europe', 'Latin America', 'North America'],\r\n        datasets: [\r\n          {\r\n            label: '1950',\r\n            fill: true,\r\n            backgroundColor: 'rgba(179,181,198,0.2)',\r\n            borderColor: 'rgba(179,181,198,1)',\r\n            pointBorderColor: '#fff',\r\n            pointBackgroundColor: 'rgba(179,181,198,1)',\r\n            data: [8.77, 55.61, 21.69, 6.62, 6.82]\r\n          }, {\r\n            label: '2050',\r\n            fill: true,\r\n            backgroundColor: 'rgba(255,99,132,0.2)',\r\n            borderColor: 'rgba(255,99,132,1)',\r\n            pointBorderColor: '#fff',\r\n            pointBackgroundColor: 'rgba(255,99,132,1)',\r\n            data: [25.48, 54.16, 7.61, 8.06, 4.45]\r\n          }\r\n        ]\r\n      },\r\n      options: {\r\n        title: {\r\n          display: true,\r\n          text: 'Distribution in % of world population'\r\n        },\r\n        maintainAspectRatio: false,\r\n        responsive: true\r\n      }\r\n    });\r\n  }\r\n\r\n  private bubbleChart() {\r\n    const bubble = new Chart(document.getElementById('bubble-chart'), {\r\n      type: 'bubble',\r\n      data: {\r\n        labels: 'Africa',\r\n        datasets: [\r\n          {\r\n            label: ['China'],\r\n            backgroundColor: 'rgba(255,221,50,0.2)',\r\n            borderColor: 'rgba(255,221,50,1)',\r\n            data: [{\r\n              x: 21269017,\r\n              y: 5.245,\r\n              r: 15\r\n            }]\r\n          }, {\r\n            label: ['Denmark'],\r\n            backgroundColor: 'rgba(60,186,159,0.2)',\r\n            borderColor: 'rgba(60,186,159,1)',\r\n            data: [{\r\n              x: 258702,\r\n              y: 7.526,\r\n              r: 10\r\n            }]\r\n          }, {\r\n            label: ['Germany'],\r\n            backgroundColor: 'rgba(0,0,0,0.2)',\r\n            borderColor: '#000',\r\n            data: [{\r\n              x: 3979083,\r\n              y: 6.994,\r\n              r: 15\r\n            }]\r\n          }, {\r\n            label: ['Japan'],\r\n            backgroundColor: 'rgba(193,46,12,0.2)',\r\n            borderColor: 'rgba(193,46,12,1)',\r\n            data: [{\r\n              x: 4931877,\r\n              y: 5.921,\r\n              r: 15\r\n            }]\r\n          }\r\n        ]\r\n      },\r\n      options: {\r\n        title: {\r\n          display: true,\r\n          text: 'Predicted world population (millions) in 2050'\r\n        },\r\n        scales: {\r\n          yAxes: [{\r\n            scaleLabel: {\r\n              display: true,\r\n              labelString: 'Happiness'\r\n            }\r\n          }],\r\n          xAxes: [{\r\n            scaleLabel: {\r\n              display: true,\r\n              labelString: 'GDP (PPP)'\r\n            }\r\n          }]\r\n        },\r\n        maintainAspectRatio: false,\r\n        responsive: true\r\n      }\r\n    });\r\n  }\r\n\r\n  private mixedChart() {\r\n    const mixed = new Chart(document.getElementById('mixed-chart'), {\r\n      type: 'bar',\r\n      data: {\r\n        labels: ['1900', '1950', '1999', '2050'],\r\n        datasets: [{\r\n          label: 'Europe',\r\n          type: 'line',\r\n          borderColor: '#8e5ea2',\r\n          data: [408, 547, 675, 734],\r\n          fill: false\r\n        }, {\r\n          label: 'Africa',\r\n          type: 'line',\r\n          borderColor: '#3e95cd',\r\n          data: [133, 221, 783, 2478],\r\n          fill: false\r\n        }, {\r\n          label: 'Europe',\r\n          type: 'bar',\r\n          backgroundColor: 'rgba(0,0,0,0.2)',\r\n          data: [408, 547, 675, 734],\r\n        }, {\r\n          label: 'Africa',\r\n          type: 'bar',\r\n          backgroundColor: 'rgba(0,0,0,0.2)',\r\n          backgroundColorHover: '#3e95cd',\r\n          data: [133, 221, 783, 2478]\r\n        }\r\n        ]\r\n      },\r\n      options: {\r\n        title: {\r\n          display: true,\r\n          text: 'Population growth (millions): Europe & Africa'\r\n        },\r\n        legend: { display: false },\r\n        maintainAspectRatio: false,\r\n        responsive: true\r\n      }\r\n    });\r\n  }\r\n\r\n  private doughnutChart() {\r\n    const doughnut = new Chart(document.getElementById('doughnut-chart'), {\r\n      type: 'doughnut',\r\n      data: {\r\n        labels: ['Africa', 'Asia', 'Europe', 'Latin America', 'North America'],\r\n        datasets: [\r\n          {\r\n            label: 'Population (millions)',\r\n            backgroundColor: ['#3e95cd', '#8e5ea2', '#3cba9f', '#e8c3b9', '#c45850'],\r\n            data: [2478, 5267, 734, 784, 433]\r\n          }\r\n        ]\r\n      },\r\n      options: {\r\n        title: {\r\n          display: true,\r\n          text: 'Predicted world population (millions) in 2050'\r\n        },\r\n        maintainAspectRatio: false,\r\n        responsive: true\r\n      }\r\n    });\r\n  }\r\n\r\n  private lineChart() {\r\n    const line = new Chart(document.getElementById('line-chart'), {\r\n      type: 'line',\r\n      data: {\r\n        labels: [1500, 1600, 1700, 1750, 1800, 1850, 1900, 1950, 1999, 2050],\r\n        datasets: [{\r\n          data: [86, 114, 106, 106, 107, 111, 133, 221, 783, 2478],\r\n          label: 'Africa',\r\n          borderColor: '#3e95cd',\r\n          fill: false\r\n        }, {\r\n          data: [282, 350, 411, 502, 635, 809, 947, 1402, 3700, 5267],\r\n          label: 'Asia',\r\n          borderColor: '#8e5ea2',\r\n          fill: false\r\n        }, {\r\n          data: [168, 170, 178, 190, 203, 276, 408, 547, 675, 734],\r\n          label: 'Europe',\r\n          borderColor: '#3cba9f',\r\n          fill: false\r\n        }, {\r\n          data: [40, 20, 10, 16, 24, 38, 74, 167, 508, 784],\r\n          label: 'Latin America',\r\n          borderColor: '#e8c3b9',\r\n          fill: false\r\n        }, {\r\n          data: [6, 3, 2, 2, 7, 26, 82, 172, 312, 433],\r\n          label: 'North America',\r\n          borderColor: '#c45850',\r\n          fill: false\r\n        }\r\n        ]\r\n      },\r\n      options: {\r\n        title: {\r\n          display: true,\r\n          text: 'World population per region (in millions)'\r\n        },\r\n        maintainAspectRatio: false,\r\n        responsive: true\r\n      }\r\n    });\r\n  }\r\n\r\n  private barChart() {\r\n    const bar = new Chart(document.getElementById('bar-chart'), {\r\n      type: 'bar',\r\n      data: {\r\n        labels: ['Africa', 'Asia', 'Europe', 'Latin America', 'North America'],\r\n        datasets: [\r\n          {\r\n            label: 'Population (millions)',\r\n            backgroundColor: ['#3ebb8c', '#9092a5', '#f36b56', '#39a8d0', '#fed33d'],\r\n            data: [2478, 5267, 734, 784, 433]\r\n          }\r\n        ]\r\n      },\r\n      options: {\r\n        legend: { display: false },\r\n        title: {\r\n          display: true,\r\n          text: 'Predicted world population (millions) in 2050'\r\n        },\r\n        maintainAspectRatio: false,\r\n        responsive: true\r\n      }\r\n    });\r\n  }\r\n\r\n  private setExample() {\r\n    // Define data set for all charts\r\n    this.exampleDataSet1 = [1, 10, 5, 2, 20, 30, 45];\r\n    this.exampleDataSet2 = [20, 30, 15, 12, 21, 30, 40];\r\n    this.exampleData = {\r\n      labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\r\n      datasets: [\r\n        {\r\n          label: 'DataSet1!',\r\n          fill: false,\r\n          backgroundColor: 'rgba(144,146,165, 0.8)',\r\n          borderColor: 'rgb(144,146,165)',\r\n          data: this.exampleDataSet1,\r\n        },\r\n        {\r\n          label: 'DataSet2!',\r\n          fill: true,\r\n          backgroundColor: 'rgb(62,187,140, 0.8)',\r\n          borderColor: 'rgb(62,187,140)',\r\n          data: this.exampleDataSet2,\r\n        }]\r\n    };\r\n    // Default chart defined with type: 'line'\r\n    this.exampleChartCanvas = document.getElementById('exampleChart');\r\n    this.exampleChart = new Chart(this.exampleChartCanvas, {\r\n      type: this.exampleChartType,\r\n      data: this.exampleData,\r\n      options: {\r\n        maintainAspectRatio: false,\r\n        responsive: true\r\n      }\r\n    });\r\n  }\r\n  // Function runs on chart type select update\r\n  updateChartType() {\r\n    // Since you can't update chart type directly in Charts JS you must destroy original chart and rebuild\r\n    this.exampleChart.destroy();\r\n    this.exampleChart = new Chart(this.exampleChartCanvas, {\r\n      type: this.exampleChartType,\r\n      data: this.exampleData,\r\n      options: {\r\n        maintainAspectRatio: false,\r\n        responsive: true\r\n      }\r\n    });\r\n  }\r\n  // Randomize data button function\r\n  randomizeData() {\r\n    const newDataBaby = this.exampleDataSet1.map(x => Math.floor(Math.random() * 50));\r\n    const newdataSet2Baby = this.exampleDataSet2.map(x => Math.floor(Math.random() * 40));\r\n    this.exampleData.datasets[0].data = newDataBaby;\r\n    this.exampleData.datasets[1].data = newdataSet2Baby;\r\n    this.exampleChart.update();\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ChartsComponent } from './charts.component';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: ChartsComponent }\r\n];\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    NgSelectModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [ChartsComponent]\r\n})\r\nexport class ChartsModule { }\r\n"],"sourceRoot":""}